//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó mediante una herramienta.
//     Los cambios del archivo se perderán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using GYM.Clases;
using System.Data;
using MySql.Data.MySqlClient;

public class CTrabajador
{
    #region propiedades
    private int user_id;
    private int numTrabajador;
    private string nombre;
    private string apellidos;
    private string direccion;
    private int codigoPostal;
    private string ciudad;
    private  string estado;
    private string telefono;
    private string celular;
	private string email;
    private int genero;
    private DateTime fechaNacimiento;
    private  DateTime fechaCreacion;
    private CTrabajador persona;


    public int UserID
    {
        get { return this.user_id;}
        set { this.user_id=value;}
    }
    public int NumeroTrabajador
    {
        get { return this.numTrabajador; }
        set { this.numTrabajador = value; }
    }
    public string Nombre
    {
        get { return this.nombre; }
        set { this.nombre = value; }
    }
    public string Apellidos
    {
        get { return this.apellidos; }
        set { this.apellidos = value; }
    }
    public string Direccion
    {
        get { return this.direccion; }
        set { this.direccion = value; }
    }

    public int CodigoPostal
    {
        get { return codigoPostal; }
        set { codigoPostal = value; }
    }
    
    public string Ciudad
    {
        get { return this.ciudad; }
        set { this.ciudad = value; }
    }
    public string Estado
    {
        get { return this.estado; }
        set { this.estado = value; }
    }
    public string Telefono
    {
        get { return this.telefono; }
        set { this.telefono = value; }
    }

    public string Celular
    {
        get { return this.celular; }
        set { this.celular = value; }
    }
    public string Email
    {
        get { return this.email; }
        set { this.email = value; }
    }
    public int Genero
    {
        get { return this.genero; }
        set { this.genero = value; }
    }
    public DateTime FechaNacimiento
    {
        get { return this.fechaNacimiento; }
        set { this.fechaNacimiento = value; }
    }
    public DateTime FechaCreacion
    {
        get { return this.fechaCreacion; }
        set { this.fechaCreacion = value; }
    }

    public CTrabajador Persona
    {
        get { return this.persona; }
        set { this.persona = value; }
    }
#endregion

    /// <summary>
    /// Inicializa una nueva instancia de la clase CTrabajador
    /// </summary>
    /// <param name="numTrabajador">Número del trabajador</param>
    public CTrabajador(int numTrabajador)
    {
        this.numTrabajador = numTrabajador;
    }

    /// <summary>
    /// Inicializa una nueva instancia de la clase CTrabajador
    /// </summary>
    public CTrabajador()
    {
    }

    /// <summary>
    /// Función que verifica la existencia de determinado trabajador
    /// </summary>
    /// <param name="numTrabajador">Número del trabajador del que se busca veríficar</param>
    /// <exception cref="MySql.Data.MySqlClient.MySqlException">Excepción que se lanza cuando ocurre un error con la conexión a la base de datos o con la ejecución de la consulta</exception>
    /// <exception cref="System.Exception">Representa los errores que se producen durante la ejecución de una aplicación.</exception>
    /// <returns>Valor booleano que indica si el trabajador existe</returns>
    public bool VerificarExistenciaTrabajador(int numTrabajador)
    {
        try
        {
            MySqlCommand sql = new MySqlCommand();
            sql.CommandText = "SELECT nombre FROM trabajadoes WHERE numTrabajador=? LIMIT 1";
            sql.Parameters.AddWithValue("@numTrabajador", numTrabajador);
            DataTable list = ConexionBD.EjecutarConsultaSelect(sql);
            if (list.Rows.Count > 0)
                return true;
        }
        catch (MySqlException ex)
        {
            throw ex;
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return false;
    }

    /// <summary>
    /// Función que obtiene los datos de un trabajador por su ID
    /// </summary>
    /// <exception cref="MySql.Data.MySqlClient.MySqlException">Excepción que se lanza cuando ocurre un error con la conexión a la base de datos o con la ejecución de la consulta</exception>
    /// <exception cref="System.FormatException">Excepción que se produce cuando el formato de un argumento no cumple las especificaciones de los parámetros del método invocado.</exception>
    /// <exception cref="Systen.OverflowException">Excepción que se produce cuando una operación aritmética, de conversión de tipo o de conversión de otra naturaleza en un contexto comprobado, da como resultado una sobrecarga.</exception>
    /// <exception cref="System.ArgumentNullException">Excepción que se produce cuando se pasa una referencia nula a un método que no la acepta como argumento válido.</exception>
    /// <exception cref="System.Exception">Representa los errores que se producen durante la ejecución de una aplicación.</exception>
    public void ObtenerTrabajadorPorID()
    {
        try
        {
            MySqlCommand sql = new MySqlCommand();

            //strftime('%d/%m/%Y',miembros.fecha_nac) AS 
            //strftime('%d/%m/%Y',miembros.fecha_creacion) AS 
            //
            sql.CommandText = "SELECT fecha_nac, fecha_creacion," +
             " numTrabajador,nombre,apellidos,direccion,ciudad,estado,telefono,celular,email,genero " +
             " FROM trabajadores WHERE numTrabajador=?";
            sql.Parameters.AddWithValue("@numTrabajador", numTrabajador);
            DataTable list = ConexionBD.EjecutarConsultaSelect(sql);
            foreach (DataRow dr in list.Rows)
            {
                numTrabajador = int.Parse(dr["numTrabajador"].ToString());
                if (dr["nombre"].ToString().Equals("") || dr["nombre"].Equals(DBNull.Value))
                    nombre = "";
                else
                    nombre = dr["nombre"].ToString();

                if (dr["apellidos"].ToString().Equals("") || dr["apellidos"].Equals(DBNull.Value))
                    Apellidos = "";
                else
                    Apellidos = dr["apellidos"].ToString();

                if (dr["direccion"].ToString().Equals("") || dr["direccion"].Equals(DBNull.Value))
                    direccion = "";
                else
                    direccion = dr["direccion"].ToString();

                if (dr["ciudad"].ToString().Equals("") || dr["ciudad"].Equals(DBNull.Value))
                    ciudad = "";
                else
                    ciudad = dr["ciudad"].ToString();

                if (dr["estado"].ToString().Equals("") || dr["estado"].Equals(DBNull.Value))
                    estado = "";
                else
                    estado = dr["estado"].ToString();

                if (dr["telefono"].ToString().Equals("") || dr["telefono"].Equals(DBNull.Value))
                    telefono = "";
                else
                    telefono = dr["telefono"].ToString();

                if (dr["celular"].ToString().Equals("") || dr["celular"].Equals(DBNull.Value))
                    celular = "";
                else
                    celular = dr["celular"].ToString();

                if (dr["email"].ToString().Equals("") || dr["email"].Equals(DBNull.Value))
                    email = "";
                else
                    email = dr["email"].ToString();


                genero = int.Parse(dr["genero"].ToString());

                Console.WriteLine(dr["fecha_nac"].ToString());
                if (dr["fecha_nac"].ToString().Equals("") || dr["fecha_nac"] == DBNull.Value)
                    fechaNacimiento = DateTime.Now;
                else
                    fechaNacimiento = DateTime.Parse(dr["fecha_nac"].ToString());

                fechaCreacion = DateTime.Parse(dr["fecha_creacion"].ToString());
            }

        }
        catch (MySqlException ex)
        {
            throw ex;
        }
        catch (FormatException ex)
        {
            throw ex;
        }
        catch (OverflowException ex)
        {
            throw ex;
        }
        catch (ArgumentNullException ex)
        {
            throw ex;
        }
        catch (Exception ex)
        {
            throw ex;
        }

    }

    /// <summary>
    /// Inserta un nuevo trabajador con los datos dados en el objeto de la clase CTrabajador
    /// </summary>
    /// <param name="trabajador">Objeto de la clase CTrabajador con los datos del trabajador</param>
    /// <exception cref="MySql.Data.MySqlClient.MySqlException">Excepción que se lanza cuando ocurre un error con la conexión a la base de datos o con la ejecución de la consulta</exception>
    /// <exception cref="System.Exception">Representa los errores que se producen durante la ejecución de una aplicación.</exception>
    /// <returns>Valor booleano que indica si se inserto el trabajador</returns>
    public bool InsertarTrabajador(CTrabajador trabajador)
    {
        bool inserto = false;
        try
        {
            MySqlCommand sql = new MySqlCommand();
            sql.CommandText = "INSERT INTO trabajadores(numTrabajador,nombre,apellidos,direccion,ciudad,estado,telefono,celular,email,genero,fecha_nac,fecha_creacion,create_time,create_user_id)" +
                "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            sql.Parameters.AddWithValue("@numTrabajador", trabajador.numTrabajador);
            sql.Parameters.AddWithValue("@nombre", trabajador.nombre);
            sql.Parameters.AddWithValue("@apellidos", trabajador.apellidos);
            sql.Parameters.AddWithValue("@direccion", trabajador.direccion);
            sql.Parameters.AddWithValue("@ciudad", trabajador.ciudad);
            sql.Parameters.AddWithValue("@estado", trabajador.estado);
            sql.Parameters.AddWithValue("@telefono", trabajador.telefono);
            sql.Parameters.AddWithValue("@celular", trabajador.celular);
            sql.Parameters.AddWithValue("@email", trabajador.email);
            sql.Parameters.AddWithValue("@genero", trabajador.genero);
            sql.Parameters.AddWithValue("@fecha_nac", trabajador.fechaNacimiento);
            sql.Parameters.AddWithValue("@fecha_creacion", trabajador.fechaCreacion);
            sql.Parameters.AddWithValue("@create_time", DateTime.Now);
            sql.Parameters.AddWithValue("@create_user_id", trabajador.user_id);
            ConexionBD.EjecutarConsulta(sql);
            inserto = true;
        }
        catch (MySqlException ex)
        {
            throw ex;
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return inserto;
    }

    /// <summary>
    /// Función que edita el trabajador con la información dadas en las propiedades de la clase
    /// </summary>
    /// <exception cref="MySql.Data.MySqlClient.MySqlException">Excepción que se lanza cuando ocurre un error con la conexión a la base de datos o con la ejecución de la consulta</exception>
    /// <exception cref="System.Exception">Representa los errores que se producen durante la ejecución de una aplicación.</exception>
    public void EditarTrabajador()
    {
        try
        {
            MySqlCommand sql = new MySqlCommand();
            sql.CommandText = "UPDATE trabajadores SET nombre=?, apellidos=?, direccion=?, ciudad=?, estado=?, telefono=?, celular=?, " +
                "email=?, fecha_nac=?, genero=?, update_time=?, update_user_id=? WHERE numTrabajador=?";
            sql.Parameters.AddWithValue("@nombre", nombre);
            sql.Parameters.AddWithValue("@apellidos", apellidos);
            sql.Parameters.AddWithValue("@direccion", direccion);
            sql.Parameters.AddWithValue("@ciudad", ciudad);
            sql.Parameters.AddWithValue("@estado", estado);
            sql.Parameters.AddWithValue("@telefono", telefono);
            sql.Parameters.AddWithValue("@celular", celular);
            sql.Parameters.AddWithValue("@email", email);
            sql.Parameters.AddWithValue("@fecha_nac", fechaNacimiento);
            sql.Parameters.AddWithValue("@genero", genero);
            sql.Parameters.AddWithValue("@update_time", DateTime.Now);
            sql.Parameters.AddWithValue("@update_user_id", user_id);
            sql.Parameters.AddWithValue("@numTrabajador", numTrabajador);
            ConexionBD.EjecutarConsulta(sql);
        }
        catch (MySqlException ex)
        {
            throw ex;
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    /// <summary>
    /// Función que elimina el trabajador con el número de trabajador asignado
    /// </summary>
    /// <exception cref="MySql.Data.MySqlClient.MySqlException">Excepción que se lanza cuando ocurre un error con la conexión a la base de datos o con la ejecución de la consulta</exception>
    /// <exception cref="System.Exception">Representa los errores que se producen durante la ejecución de una aplicación.</exception>
    /// <returns>Valor booleano que indica si se elimino o no el usuario</returns>
    public bool EliminarTrabajador()
    {
        bool elimino = false;
        try
        {
            string sql = "DELETE FROM trabajadores WHERE numTrabajador = " + numTrabajador;
            ConexionBD.EjecutarConsulta(sql);
            elimino = true;
        }
        catch (MySqlException ex)
        {
            throw ex;
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return elimino;
    }


  /*  public bool AgregarIngreso(int numSocio)
    {
        try
        {
            MySqlCommand sql = new MySqlCommand();
            sql.CommandText= "INSERT INTO ingreso_miembros(numSocio,fecha_entrada) VALUES (?,?)";
            sql.Parameters.AddWithValue("@persona_id",numSocio);
            sql.Parameters.AddWithValue("@fecha_entrada",DateTime.Now.ToShortDateString());
            sql.CommandType = CommandType.Text;
            ConexionBD.EjecutarConsulta(sql);
            return true;
        }
        catch (MySqlException ex)
        {
            System.Windows.Forms.MessageBox.Show(ex.Message);
            return false;
        }

    }*/
}

